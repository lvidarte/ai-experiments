#cloud-config
package_update: true
packages:
  - git
  - tree

mounts:
  - [ "/dev/disk/by-id/scsi-0DO_Volume_models02", "/mnt", "ext4", "defaults,nofail,discard", "0", "0" ]

write_files:
  # Systemd service to collect logs before unmounting /mnt
  - path: /etc/systemd/system/shutdown-log.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Collect logs before unmounting /mnt
      DefaultDependencies=no
      Before=umount.target
      After=final.target
      RequiresMountsFor=/mnt

      [Service]
      Type=oneshot
      ExecStart=/app/shutdown_log.sh
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target

  # Script to collect logs before unmounting /mnt
  - path: /app/shutdown_log.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      DST_DIR="/mnt/downloader"
      SRC_FILE="/var/log/cloud-init-output.log"
      DST_FILE="${DST_DIR}/$(date +"%Y-%m-%d_%H-%M-%S")_cloud-init-output.log"
      mkdir -p $DST_DIR
      cp $SRC_FILE $DST_FILE

  # Script to enable shutdown-log service
  - path: /app/enable_shutdown_service.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      echo "--------------------------------------------------------"
      echo "Enable shutdown-log service"
      echo "--------------------------------------------------------"
      systemctl daemon-reload
      systemctl enable shutdown-log.service

  # Script to create the base directories
  - path: /app/create_base_dirs.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      echo "--------------------------------------------------------"
      echo "Create base dirs in /mnt"
      echo "--------------------------------------------------------"
      mkdir -p /mnt/comfy/models
      echo "All set!"

  # Script to download the files
  - path: /app/downloader.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      echo "--------------------------------------------------------"
      echo "Downloading files"
      echo "--------------------------------------------------------"
      BASE_DIR="/mnt/comfy"
      FILES_LIST="/app/files_list.txt"
      cd $BASE_DIR
      while read -r URL DEST_DIR NEW_NAME; do
          # Skip empty lines and lines that start with #
          [[ -z "$URL" || "$URL" =~ ^# ]] && continue

          FILE_NAME="${NEW_NAME:-$(basename $URL)}"
          FILE_PATH="$DEST_DIR$FILE_NAME" # DEST_DIR has / at the end

          if [ -f "$FILE_PATH" ]; then
              echo "--- Skipping $FILE_PATH (already exists)"
          else
              echo ">>> Downloading $FILE_PATH"
              mkdir -p "$DEST_DIR"
              if [ -z "$NEW_NAME" ]; then
                  wget --quiet -c "$URL" -O "$FILE_PATH"
              else
                  wget --quiet -c "$URL" -P "$DEST_DIR"
              fi
          fi
      done < $FILES_LIST
      echo "--------------------------------------------------------"
      echo "All files downloaded!"
      echo
      echo "Disk usage: $(du -sh /mnt)"
      echo
      echo "Models directory structure:"
      echo
      tree models
      echo
      ls -lh $BASE_DIR/models/**/*
      echo "--------------------------------------------------------"
      echo "Downloader script finished!"
  
  # List of the files to download
  - path: /app/files_list.txt
    permissions: '0644'
    content: |
      # ====================================================
      # Format: URL DEST_DIR/ [NEW_NAME]
      #
      # Alert: put / at the end of the destination directory
      # ====================================================

      # Comfy default workflow
      https://huggingface.co/Comfy-Org/stable-diffusion-v1-5-archive/resolve/main/v1-5-pruned-emaonly-fp16.safetensors ./models/checkpoints/

      # Cosmos 1.0
      # https://comfyanonymous.github.io/ComfyUI_examples/cosmos/
      #
      https://huggingface.co/mcmonkey/cosmos-1.0/resolve/main/Cosmos-1_0-Diffusion-7B-Video2World.safetensors ./models/diffusion_models/
      https://huggingface.co/mcmonkey/cosmos-1.0/resolve/main/Cosmos-1_0-Diffusion-14B-Video2World.safetensors ./models/diffusion_models/
      https://huggingface.co/calcuis/cosmos/resolve/main/oldt5_xxl_fp16.safetensors ./models/clip/ cosmos_oldt5_xxl_fp16.safetensors
      https://huggingface.co/comfyanonymous/cosmos_1.0_text_encoder_and_VAE_ComfyUI/resolve/main/vae/cosmos_cv8x8x8_1.0.safetensors ./models/vae/


      #https://huggingface.co/comfyanonymous/cosmos_1.0_text_encoder_and_VAE_ComfyUI/resolve/main/text_encoders/oldt5_xxl_fp8_e4m3fn_scaled.safetensors ./models/text_encoders/
      #https://huggingface.co/mcmonkey/cosmos-1.0/resolve/main/Cosmos-1_0-Diffusion-7B-Text2World.safetensors ./models/diffusion_models/

      # Flux FP8 version
      # https://comfyanonymous.github.io/ComfyUI_examples/flux/
      #
      #https://huggingface.co/Comfy-Org/flux1-dev/resolve/main/flux1-dev-fp8.safetensors ./models/checkpoints/
      #https://huggingface.co/Comfy-Org/flux1-schnell/resolve/main/flux1-schnell-fp8.safetensors ./models/checkpoints/
      #https://huggingface.co/black-forest-labs/FLUX.1-schnell/resolve/main/ae.safetensors ./models/vae/
      #https://huggingface.co/comfyanonymous/flux_RealismLora_converted_comfyui/resolve/main/flux_realism_lora.safetensors ./models/loras/

      # Flux Text Encoders
      #https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/t5xxl_fp16.safetensors ./models/clip/
      #https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/t5xxl_fp8_e4m3fn.safetensors ./models/clip/

      # SDXL (Stable Diffusion XL) ReVision
      # https://comfyanonymous.github.io/ComfyUI_examples/sdxl/
      #
      #https://huggingface.co/comfyanonymous/clip_vision_g/resolve/main/clip_vision_g.safetensors ./models/clip_vision/
      #https://huggingface.co/xinsir/controlnet-union-sdxl-1.0/resolve/main/diffusion_pytorch_model_promax.safetensors ./models/controlnet/
      #https://huggingface.co/Comfy-Org/stable-diffusion-v1-5-archive/resolve/main/v1-5-pruned-emaonly-fp16.safetensors ./models/checkpoints/

      # LTX-Video
      #https://huggingface.co/Lightricks/LTX-Video/resolve/main/ltx-video-2b-v0.9.safetensors ./models/checkpoints/
      #https://huggingface.co/Lightricks/LTX-Video/resolve/main/ltx-video-2b-v0.9.1.safetensors ./models/checkpoints/

runcmd:
  - /app/enable_shutdown_service.sh
  - /app/create_base_dirs.sh
  - /app/downloader.sh
